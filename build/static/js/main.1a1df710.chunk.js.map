{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","filterStr","filterData","value","onChange","type","PersonForm","handleSubmitForm","newName","setNewName","newNumber","setNewNumber","onSubmit","e","target","Person","name","number","deletePerson","onClick","Persons","matchPersons","map","p","key","id","Notification","message","flag","notificatinStyles","color","style","className","baseUrl","axios","get","then","response","data","person","post","delete","newPerson","put","App","useState","persons","setPersons","setFilterStr","notificationMessage","setNotificationMessage","notificationFlag","setNotificationFlag","useEffect","phonebookService","initialPersons","filter","toUpperCase","includes","preventDefault","window","confirm","returnedPerson","setTimeout","catch","error","concat","deletedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a1df710.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filterStr, filterData}) => {\n  return (\n    <div>\n      filter shown with \n      <input value={filterStr} onChange={filterData} type=\"text\"/> \n    </div>\n  )\n}\n\nexport default Filter;","import React from 'react'\n\nconst PersonForm = ({handleSubmitForm, newName, setNewName, newNumber, setNewNumber}) => {\n  return (\n    <form onSubmit={handleSubmitForm} >\n      <div>\n        name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={(e) => setNewNumber(e.target.value)} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm;","import React from 'react'\n\nconst Person = ({name, number, deletePerson}) => {\n  return (\n    <li>{name} {number} <button onClick={deletePerson}>delete</button></li>\n  )\n}\n\nexport default Person;","import React from 'react'\nimport Person from './Person'\n\nconst Persons = ({matchPersons, deletePerson}) => {\n  return (\n    <ul>\n      {matchPersons.map((p) => \n        <Person \n          key={p.name} \n          name={p.name} \n          number={p.number} \n          deletePerson={() => deletePerson(p.id)}\n        />\n      )}\n    </ul>\n  )\n}\n\nexport default Persons;","import React from 'react';\n\nconst Notification = ({ message, flag }) => {\n  if (message === null) {\n    return null\n  }\n\n  const notificatinStyles = flag === 'success' \n    ? {\n      color: 'green',\n    }\n    : {\n      color: 'red',\n    };\n\n  return (\n    <div style={notificatinStyles} className=\"success\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification;","import axios from 'axios';\nconst baseUrl = '/api/persons';\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then(response => response.data);\n}\n\nconst create = person => {\n  const request = axios.post(baseUrl, person);\n  return request.then(response => response.data);\n}\n\nconst deletePerson = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`);\n  return request.then(response => response.data);\n}\n\nconst update = (id, newPerson) => {\n  const request = axios.put(`${baseUrl}/${id}`, newPerson);\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update };","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport Notification from './components/Notification'\nimport phonebookService from './services/phonebook'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterStr, setFilterStr ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n  const [ notificationFlag, setNotificationFlag] = useState('success')\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, []);\n\n  const handleSubmitForm = (e) => {\n    e.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber\n    }\n\n    if ( persons.map(p => p.name).includes(newName) ) {\n      const existedPerson = persons.filter(p => p.name === newName);\n      const { id, name } = existedPerson[0];\n\n      const isReplace = window.confirm(`${name} is already added to phonebook, replace the old number with a new one?`);\n      if ( isReplace ) {\n        phonebookService\n          .update(id, newPerson)\n          .then(returnedPerson => {\n            setNotificationMessage(`${newName} number is updated`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n            }, 5000)\n            setPersons(persons.map(p => p.id !== id ? p : returnedPerson));\n          })\n          .catch(error => {\n            setNotificationFlag('error');\n            setNotificationMessage(`information of ${newName} has already been removed from the server`);\n            setTimeout(() => {\n              setNotificationMessage(null);\n              setNotificationFlag('success');\n            }, 5000);\n            setPersons(persons.filter(p => p.id !== id));\n          })\n      }\n      setNewName('');\n      setNewNumber('');\n      return;\n    }\n\n    phonebookService\n      .create(newPerson)\n      .then(returnedPerson => {\n        setNotificationMessage(`added ${returnedPerson.name}`);\n        setTimeout(() => {\n          setNotificationMessage(null);\n        }, 5000);\n        setPersons(persons.concat(returnedPerson));\n        setNewName('');\n        setNewNumber('');\n      })\n  }\n\n  const filterData = (e) => {\n    setFilterStr(e.target.value);\n  }\n\n  const matchPersons = \n      persons.filter(p => p.name.toUpperCase().includes(filterStr.toUpperCase()));\n\n  const deletePerson = (id) => {\n    const deletedPerson = persons.filter(p => p.id === id);\n    const isDelete = window.confirm(`delete ${deletedPerson[0].name}?`);\n\n    if ( isDelete ) {\n      phonebookService\n        .deletePerson(id)\n        .then(() => {\n          setPersons(persons.filter(p => p.id !== id));\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notificationMessage} flag={notificationFlag} />\n      <Filter filterStr={filterStr} filterData={filterData} />\n      <h2>add a new</h2>\n      <PersonForm \n        handleSubmitForm={handleSubmitForm} \n        newName={newName} \n        setNewName={setNewName} \n        newNumber={newNumber} \n        setNewNumber={setNewNumber} \n      />\n      <h2>Numbers</h2>\n      <Persons matchPersons={matchPersons} deletePerson={deletePerson} />      \n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}